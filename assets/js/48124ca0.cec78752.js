"use strict";(self.webpackChunkalexmercerind_github_io=self.webpackChunkalexmercerind_github_io||[]).push([[6817],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=r.createContext({}),l=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=l(e.components);return r.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,u=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),f=l(n),m=a,y=f["".concat(u,".").concat(m)]||f[m]||p[m]||i;return n?r.createElement(y,o(o({ref:t},s),{},{components:n})):r.createElement(y,o({ref:t},s))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=f;var c={};for(var u in t)hasOwnProperty.call(t,u)&&(c[u]=t[u]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var l=2;l<i;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},881:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return u},default:function(){return m},frontMatter:function(){return c},metadata:function(){return l},toc:function(){return p}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),o=["components"],c={slug:"cpp-future-async-sync-multi-threading",authors:"alexmercerind",title:"C++'s <future>, making async C callbacks functions sync & enjoyable multi-threading",tags:["c++","std::async","multi-threading","async"]},u=void 0,l={permalink:"/blog/cpp-future-async-sync-multi-threading",source:"@site/blog/2022-05-21-cpp-future-async-sync-multi-threading.md",title:"C++'s <future>, making async C callbacks functions sync & enjoyable multi-threading",description:"I use `` header in C++ very-very often in my code everywhere at this point & wanted to share what's so cool in it.",date:"2022-05-21T00:00:00.000Z",formattedDate:"May 21, 2022",tags:[{label:"c++",permalink:"/blog/tags/c"},{label:"std::async",permalink:"/blog/tags/std-async"},{label:"multi-threading",permalink:"/blog/tags/multi-threading"},{label:"async",permalink:"/blog/tags/async"}],readingTime:5.83,truncated:!0,authors:[{name:"Hitesh",title:"Flutter & React.js developer. Writes C++, Dart, JS & Python. Maintains few utility libraries. Beautiful UI <3",url:"https://github.com/alexmercerind",imageURL:"https://github.com/alexmercerind.png",key:"alexmercerind"}],frontMatter:{slug:"cpp-future-async-sync-multi-threading",authors:"alexmercerind",title:"C++'s <future>, making async C callbacks functions sync & enjoyable multi-threading",tags:["c++","std::async","multi-threading","async"]},prevItem:{title:"Animations in Flutter done right [Flutter 2 & 3]",permalink:"/blog/animations-in-flutter-done-right"}},s={authorsImageUrls:[void 0]},p=[],f={toc:p};function m(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"I use ",(0,i.kt)("a",{parentName:"p",href:"https://cplusplus.com/reference/future"},(0,i.kt)("inlineCode",{parentName:"a"},"<future>"))," header in C++ very-very often in my code everywhere at this point & wanted to share what's so cool in it."))}m.isMDXComponent=!0}}]);