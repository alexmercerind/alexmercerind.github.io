"use strict";(self.webpackChunkalexmercerind_github_io=self.webpackChunkalexmercerind_github_io||[]).push([[148],{3905:function(e,n,t){t.d(n,{Zo:function(){return m},kt:function(){return u}});var a=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=a.createContext({}),d=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},m=function(e){var n=d(e.components);return a.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},c=a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),c=d(t),u=i,h=c["".concat(s,".").concat(u)]||c[u]||p[u]||o;return t?a.createElement(h,r(r({ref:n},m),{},{components:t})):a.createElement(h,r({ref:n},m))}));function u(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,r=new Array(o);r[0]=c;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,r[1]=l;for(var d=2;d<o;d++)r[d]=t[d];return a.createElement.apply(null,r)}return a.createElement.apply(null,t)}c.displayName="MDXCreateElement"},9955:function(e,n,t){t.r(n),t.d(n,{assets:function(){return m},contentTitle:function(){return s},default:function(){return u},frontMatter:function(){return l},metadata:function(){return d},toc:function(){return p}});var a=t(7462),i=t(3366),o=(t(7294),t(3905)),r=["components"],l={slug:"animations-in-flutter-done-right",authors:"alexmercerind",title:"Animations in Flutter done right [Flutter 2 & 3]",tags:["flutter","animations","dart"]},s=void 0,d={permalink:"/blog/animations-in-flutter-done-right",source:"@site/blog/2022-06-09-animations-in-flutter-done-right.md",title:"Animations in Flutter done right [Flutter 2 & 3]",description:"Animations on things drawn on screen & sense of motion that drives the attention of users is really important for a good user experience.",date:"2022-06-09T00:00:00.000Z",formattedDate:"June 9, 2022",tags:[{label:"flutter",permalink:"/blog/tags/flutter"},{label:"animations",permalink:"/blog/tags/animations"},{label:"dart",permalink:"/blog/tags/dart"}],readingTime:10.12,truncated:!0,authors:[{name:"Hitesh",title:"Flutter & React.js developer. Writes C++, Dart, JS & Python. Maintains few utility libraries. Beautiful UI <3",url:"https://github.com/alexmercerind",imageURL:"https://github.com/alexmercerind.png",key:"alexmercerind"}],frontMatter:{slug:"animations-in-flutter-done-right",authors:"alexmercerind",title:"Animations in Flutter done right [Flutter 2 & 3]",tags:["flutter","animations","dart"]},nextItem:{title:"C++'s <future>, making async C callbacks functions sync & enjoyable multi-threading",permalink:"/blog/cpp-future-async-sync-multi-threading"}},m={authorsImageUrls:[void 0]},p=[{value:"The 5 Ways",id:"the-5-ways",level:2},{value:"Few Other Things",id:"few-other-things",level:2},{value:"Show Me Code",id:"show-me-code",level:2},{value:"AnimatedContainer &amp; friends",id:"animatedcontainer--friends",level:3},{value:"TweenAnimationBuilder",id:"tweenanimationbuilder",level:3},{value:"AnimationController &amp; XYZTransition Widgets",id:"animationcontroller--xyztransition-widgets",level:3},{value:"AnimationController &amp; AnimatedBuilder / AnimatedWidget",id:"animationcontroller--animatedbuilder--animatedwidget",level:3},{value:"End Notes",id:"end-notes",level:3}],c={toc:p};function u(e){var n=e.components,l=(0,i.Z)(e,r);return(0,o.kt)("wrapper",(0,a.Z)({},c,l,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Animations on things drawn on screen & sense of motion that drives the attention of users is really important for a good user experience."),(0,o.kt)("p",null,"Since ",(0,o.kt)("a",{parentName:"p",href:"https://flutter.dev/"},"Flutter")," draws everything pixel-by-pixel, it offers a lot of ways by which a really-really rich experience can be achieved either it be animations, painting something entirely custom or customization options available to existing ",(0,o.kt)("inlineCode",{parentName:"p"},"Widget"),"s."),(0,o.kt)("h2",{id:"the-5-ways"},"The 5 Ways"),(0,o.kt)("p",null,"To me, there are five ways by which animations can be achieved in Flutter. They are:"),(0,o.kt)("p",null,"The first two fall in the category of implicit animations. The third & the last one are explicit animations."),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},(0,o.kt)("strong",{parentName:"p"},"In a common & simple case, the first two will be enough for your purpose !!!")))),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Animation Type"),(0,o.kt)("th",{parentName:"tr",align:null},"When To Use"),(0,o.kt)("th",{parentName:"tr",align:null},"Possible Cases"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"AnimatedXYZ")," ",(0,o.kt)("inlineCode",{parentName:"td"},"Widget"),"s e.g. ",(0,o.kt)("a",{parentName:"td",href:"https://api.flutter.dev/flutter/widgets/AnimatedContainer-class.html"},(0,o.kt)("inlineCode",{parentName:"a"},"AnimatedContainer")),", ",(0,o.kt)("a",{parentName:"td",href:"https://api.flutter.dev/flutter/widgets/AnimatedOpacity-class.html"},(0,o.kt)("inlineCode",{parentName:"a"},"AnimatedOpacity")),", ",(0,o.kt)("a",{parentName:"td",href:"https://api.flutter.dev/flutter/widgets/AnimatedScale-class.html"},(0,o.kt)("inlineCode",{parentName:"a"},"AnimatedScale")),", ",(0,o.kt)("a",{parentName:"td",href:"https://api.flutter.dev/flutter/widgets/AnimatedRotation-class.html"},(0,o.kt)("inlineCode",{parentName:"a"},"AnimatedRotation"))," etc."),(0,o.kt)("td",{parentName:"tr",align:null},"1. Your animation is simple & operates only between discrete values e.g. from one value to another & then another.",(0,o.kt)("br",null),"2. You don't want to listen the current animation position / percentage.",(0,o.kt)("br",null),"3. There is no need of pausing / playing the animation."),(0,o.kt)("td",{parentName:"tr",align:null},"1. Changing height of a ",(0,o.kt)("inlineCode",{parentName:"td"},"Container")," from ",(0,o.kt)("inlineCode",{parentName:"td"},"32.0")," to ",(0,o.kt)("inlineCode",{parentName:"td"},"156.0")," with given duration & curve.",(0,o.kt)("br",null)," 2. Increasing a scale of something upon tap/hover.",(0,o.kt)("br",null),"3. Changing color to another color.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://api.flutter.dev/flutter/widgets/TweenAnimationBuilder-class.html"},(0,o.kt)("inlineCode",{parentName:"a"},"TweenAnimationBuilder"))),(0,o.kt)("td",{parentName:"tr",align:null},"1. You want to start your animation when your ",(0,o.kt)("inlineCode",{parentName:"td"},"Widget")," is mounted.",(0,o.kt)("br",null),"2. There is no requirement of listening to current animation position / percentage.",(0,o.kt)("br",null),"3. There is no need of pausing / playing the animation.",(0,o.kt)("br",null),"4. Existing ",(0,o.kt)("inlineCode",{parentName:"td"},"AnimatedXYZ")," in Flutter aren't enough for your purpose.",(0,o.kt)("br",null),"4. Works inside StatelessWidget."),(0,o.kt)("td",{parentName:"tr",align:null},"1. Something that needs to be animated as soon as drawn to screen.",(0,o.kt)("br",null),"2. Animating ",(0,o.kt)("inlineCode",{parentName:"td"},"Color")," of something, see ",(0,o.kt)("a",{parentName:"td",href:"https://api.flutter.dev/flutter/animation/ColorTween-class.html"},(0,o.kt)("inlineCode",{parentName:"a"},"ColorTween")),".")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://api.flutter.dev/flutter/animation/AnimationController-class.html"},(0,o.kt)("inlineCode",{parentName:"a"},"AnimationController"))," + ",(0,o.kt)("inlineCode",{parentName:"td"},"XYZTransition")," ",(0,o.kt)("inlineCode",{parentName:"td"},"Widget"),"s e.g. ",(0,o.kt)("a",{parentName:"td",href:"https://api.flutter.dev/flutter/widgets/SlideTransition-class.html"},(0,o.kt)("inlineCode",{parentName:"a"},"SlideTransition")),", ",(0,o.kt)("a",{parentName:"td",href:"https://api.flutter.dev/flutter/widgets/RotationTransition-class.html"},(0,o.kt)("inlineCode",{parentName:"a"},"RotationTransition")),", ",(0,o.kt)("a",{parentName:"td",href:"https://api.flutter.dev/flutter/widgets/ScaleTransition-class.html"},(0,o.kt)("inlineCode",{parentName:"a"},"ScaleTransition"))," etc."),(0,o.kt)("td",{parentName:"tr",align:null},"1. You want to have strong control over the animation",(0,o.kt)("br",null),"2. You need capablity of playing / pausing the animation",(0,o.kt)("br",null),"3.You need access to current animation progress / percentage e.g. controlling another animation.",(0,o.kt)("br",null),"4. More complex stuff / configuration in your animation.",(0,o.kt)("br",null),"5. You possibly wanna repeat your animation upon completion (not mandatory)."),(0,o.kt)("td",{parentName:"tr",align:null},"Something very unique or some animated UI component with a lot of stuff going on in it.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://api.flutter.dev/flutter/animation/AnimationController-class.html"},(0,o.kt)("inlineCode",{parentName:"a"},"AnimationController"))," + ",(0,o.kt)("inlineCode",{parentName:"td"},"AnimatedBuilder")," / ",(0,o.kt)("inlineCode",{parentName:"td"},"AnimatedWidget")),(0,o.kt)("td",{parentName:"tr",align:null},"1. You want to animate such UI property which is not already available as ",(0,o.kt)("inlineCode",{parentName:"td"},"XYZTransition")," in Flutter.",(0,o.kt)("br",null),"2. All same requirements as above one."),(0,o.kt)("td",{parentName:"tr",align:null},"Likely, noone of the above options fit your needs & you wish to animate any arbitrary Flutter property of a ",(0,o.kt)("inlineCode",{parentName:"td"},"Widget")," which isn't present as ",(0,o.kt)("inlineCode",{parentName:"td"},"AnimatedXYZ")," or ",(0,o.kt)("inlineCode",{parentName:"td"},"XYZTransition")," in Flutter.",(0,o.kt)("br",null),"THOUGH, most options like scale, rotation, color, slide are already present. You should decide if you really want to use this.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://youtu.be/Be9UH1kXFDw"},(0,o.kt)("inlineCode",{parentName:"a"},"Hero"))," widget"),(0,o.kt)("td",{parentName:"tr",align:null},"You need to animate an element between two screens as user navigates to the second screen from first one. This is very common & brings a nice experience to the navigation."),(0,o.kt)("td",{parentName:"tr",align:null},"Most simple of all, just same ",(0,o.kt)("inlineCode",{parentName:"td"},"tag")," to both ",(0,o.kt)("inlineCode",{parentName:"td"},"Hero")," widgets wrapping the element you want to animate, one on the first screen & another on the screen you're navigating to.")))),(0,o.kt)("h2",{id:"few-other-things"},"Few Other Things"),(0,o.kt)("p",null,"Two primary things that you'd generally define for any kind of animation are:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"The time that it takes to complete the animation. a.k.a ",(0,o.kt)("inlineCode",{parentName:"li"},"duration"),"."),(0,o.kt)("li",{parentName:"ul"},"The curve (NOT the path, but how much percent of animation should be completed with respect to time at a given moment) that the animation should follow. a.k.a ",(0,o.kt)("inlineCode",{parentName:"li"},"curve"),". See ",(0,o.kt)("a",{parentName:"li",href:"https://api.flutter.dev/flutter/animation/Curves-class.html"},"THIS"),".")),(0,o.kt)("p",null,"Other than this, we will be definitely providing the width / scale / rotation / color etc. values between which the animation should take place."),(0,o.kt)("h2",{id:"show-me-code"},"Show Me Code"),(0,o.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"All the code snippets present here are complete & can be run just by copying & pasting a snippet entirely."))),(0,o.kt)("h3",{id:"animatedcontainer--friends"},"AnimatedContainer & friends"),(0,o.kt)("p",null,"Here, you just need to use any of ",(0,o.kt)("a",{parentName:"p",href:"https://api.flutter.dev/flutter/widgets/AnimatedContainer-class.html"},(0,o.kt)("inlineCode",{parentName:"a"},"AnimatedContainer")),", ",(0,o.kt)("a",{parentName:"p",href:"https://api.flutter.dev/flutter/widgets/AnimatedOpacity-class.html"},(0,o.kt)("inlineCode",{parentName:"a"},"AnimatedOpacity")),", ",(0,o.kt)("a",{parentName:"p",href:"https://api.flutter.dev/flutter/widgets/AnimatedScale-class.html"},(0,o.kt)("inlineCode",{parentName:"a"},"AnimatedScale")),", ",(0,o.kt)("a",{parentName:"p",href:"https://api.flutter.dev/flutter/widgets/AnimatedRotation-class.html"},(0,o.kt)("inlineCode",{parentName:"a"},"AnimatedRotation"))," etc. Find more of these with the help of intellisense in your code editor or on ",(0,o.kt)("a",{parentName:"p",href:"https://flutter.dev/docs"},"flutter.dev"),"."),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"If you know how to use ",(0,o.kt)("inlineCode",{parentName:"p"},"setState"),", you already know how this works."))),(0,o.kt)("p",null,"Example below shows ",(0,o.kt)("inlineCode",{parentName:"p"},"AnimatedRotation"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"AnimatedScale"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"AnimatedContainer")," & ",(0,o.kt)("inlineCode",{parentName:"p"},"AnimatedSlide"),"."),(0,o.kt)("video",{controls:!0,autoplay:!0,style:{"max-width":"100%"},src:t(9259).Z}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-dart"},"import 'dart:math';\n\nimport 'package:flutter/material.dart';\n\nvoid main() => runApp(const MyApp());\n\nclass MyApp extends StatelessWidget {\n  const MyApp({Key? key}) : super(key: key);\n\n  @override\n  Widget build(BuildContext context) {\n    return const MaterialApp(\n      home: MyHomePage(),\n    );\n  }\n}\n\nclass MyHomePage extends StatefulWidget {\n  const MyHomePage({Key? key}) : super(key: key);\n\n  @override\n  State<MyHomePage> createState() => _MyHomePageState();\n}\n\nclass _MyHomePageState extends State<MyHomePage> {\n  double turns = 0.0;\n  double scale = 1.0;\n  Color color = Colors.blue;\n  Offset offset = Offset.zero;\n\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      appBar: AppBar(title: const Text('animations')),\n      body: Column(\n        mainAxisAlignment: MainAxisAlignment.center,\n        children: [\n          Container(\n            alignment: Alignment.center,\n            height: 64.0,\n            padding: const EdgeInsets.all(12.0),\n            child: Row(\n              mainAxisAlignment: MainAxisAlignment.spaceEvenly,\n              children: [\n                ElevatedButton(\n                  onPressed: () {\n                    setState(() {\n                      turns += 1;\n                    });\n                  },\n                  child: const Text('AnimatedRotation'),\n                ),\n                ElevatedButton(\n                  onPressed: () {\n                    setState(() {\n                      scale = scale == 1.0 ? 1.5 : 1.0;\n                    });\n                  },\n                  child: const Text('AnimatedScale'),\n                ),\n                ElevatedButton(\n                  onPressed: () {\n                    setState(() {\n                      color = Color.fromARGB(\n                        255,\n                        Random().nextInt(256),\n                        Random().nextInt(256),\n                        Random().nextInt(256),\n                      );\n                    });\n                  },\n                  child: const Text('AnimatedContainer'),\n                ),\n                ElevatedButton(\n                  onPressed: () {\n                    setState(() {\n                      offset = offset == Offset.zero\n                          ? const Offset(1.0, 1.0)\n                          : Offset.zero;\n                    });\n                  },\n                  child: const Text('AnimatedSlide'),\n                ),\n              ],\n            ),\n          ),\n          Expanded(\n            child: Center(\n              child: AnimatedSlide(\n                offset: offset,\n                duration: const Duration(milliseconds: 800),\n                child: AnimatedScale(\n                  scale: scale,\n                  duration: const Duration(milliseconds: 800),\n                  child: AnimatedRotation(\n                    turns: turns,\n                    duration: const Duration(milliseconds: 800),\n                    // Animate any properties on the AnimatedContainer.\n                    child: AnimatedContainer(\n                      duration: const Duration(milliseconds: 800),\n                      curve: Curves.easeInOut,\n                      height: 96.0,\n                      width: 96.0,\n                      color: color,\n                    ),\n                  ),\n                ),\n              ),\n            ),\n          ),\n        ],\n      ),\n    );\n  }\n}\n")),(0,o.kt)("h3",{id:"tweenanimationbuilder"},"TweenAnimationBuilder"),(0,o.kt)("p",null,"Takes a ",(0,o.kt)("a",{parentName:"p",href:"https://api.flutter.dev/flutter/animation/Tween-class.html"},(0,o.kt)("inlineCode",{parentName:"a"},"Tween"))," and a ",(0,o.kt)("a",{parentName:"p",href:"https://api.flutter.dev/flutter/widgets/Widget-class.html"},(0,o.kt)("inlineCode",{parentName:"a"},"Widget"))," and animates the ",(0,o.kt)("a",{parentName:"p",href:"https://api.flutter.dev/flutter/widgets/Widget-class.html"},(0,o.kt)("inlineCode",{parentName:"a"},"Widget"))," according to the ",(0,o.kt)("a",{parentName:"p",href:"https://api.flutter.dev/flutter/animation/Tween-class.html"},(0,o.kt)("inlineCode",{parentName:"a"},"Tween"))," you provide. ",(0,o.kt)("a",{parentName:"p",href:"https://api.flutter.dev/flutter/animation/Tween-class.html"},(0,o.kt)("inlineCode",{parentName:"a"},"Tween"))," actually defines a range of values defined by a ",(0,o.kt)("inlineCode",{parentName:"p"},"begin")," and an ",(0,o.kt)("inlineCode",{parentName:"p"},"end"),". These values may be ",(0,o.kt)("inlineCode",{parentName:"p"},"double")," or even ",(0,o.kt)("inlineCode",{parentName:"p"},"Color"),"."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"TweenAnimationBuilder")," automatically animates on mount & whenever the ",(0,o.kt)("inlineCode",{parentName:"p"},"Tween")," changes due to ",(0,o.kt)("inlineCode",{parentName:"p"},"setState")," etc."),(0,o.kt)("video",{controls:!0,autoplay:!0,style:{"max-width":"100%"},src:t(3336).Z}),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Notice how animation is automatically played on mount & changing the ",(0,o.kt)("inlineCode",{parentName:"p"},"Tween")," causes the animation to continue from that point to new value."))),(0,o.kt)("p",null,"Notice the large number of methods & properties that are available to highly customize the animation."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-dart"},"import 'package:flutter/material.dart';\n\nvoid main() => runApp(const MyApp());\n\nclass MyApp extends StatelessWidget {\n  const MyApp({Key? key}) : super(key: key);\n\n  @override\n  Widget build(BuildContext context) {\n    return const MaterialApp(\n      home: MyHomePage(),\n    );\n  }\n}\n\nclass MyHomePage extends StatefulWidget {\n  const MyHomePage({Key? key}) : super(key: key);\n\n  @override\n  State<MyHomePage> createState() => _MyHomePageState();\n}\n\nclass _MyHomePageState extends State<MyHomePage> {\n  double end = 1.0;\n\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      appBar: AppBar(title: const Text('animations')),\n      body: Column(\n        mainAxisAlignment: MainAxisAlignment.center,\n        children: [\n          Container(\n            alignment: Alignment.center,\n            height: 64.0,\n            padding: const EdgeInsets.all(12.0),\n            child: Row(\n              mainAxisAlignment: MainAxisAlignment.spaceEvenly,\n              children: [\n                ElevatedButton(\n                  onPressed: () {\n                    setState(() {\n                      end = end == 0.0 ? 1.0 : 0.0;\n                    });\n                  },\n                  child: Text('Tween<double>.end = ${end == 0.0 ? 1.0 : 0.0}'),\n                ),\n              ],\n            ),\n          ),\n          Expanded(\n            child: Center(\n              child: TweenAnimationBuilder<double>(\n                tween: Tween<double>(begin: 0.0, end: end),\n                duration: const Duration(milliseconds: 400),\n                builder: (context, value, child) => Transform.scale(\n                  scale: value,\n                  child: Container(\n                    height: 256.0,\n                    width: 256.0,\n                    alignment: Alignment.center,\n                    color: Colors.blue,\n                    child: child,\n                  ),\n                ),\n                // Widget passed as child will not be redrawn when the animation is updated.\n                child: const Text(\n                  'This text is not being redrawn.',\n                  style: TextStyle(color: Colors.white),\n                ),\n              ),\n            ),\n          ),\n        ],\n      ),\n    );\n  }\n}\n")),(0,o.kt)("h3",{id:"animationcontroller--xyztransition-widgets"},"AnimationController & XYZTransition Widgets"),(0,o.kt)("p",null,"Existence of an ",(0,o.kt)("inlineCode",{parentName:"p"},"AnimationController")," itself gives a lot of configurable options & other features."),(0,o.kt)("div",{className:"admonition admonition-warning alert alert--danger"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"warning")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"For using ",(0,o.kt)("inlineCode",{parentName:"p"},"AnimationController")," in your ",(0,o.kt)("inlineCode",{parentName:"p"},"Widget"),", you need to use ",(0,o.kt)("inlineCode",{parentName:"p"},"TickerProviderStateMixin")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"SingleTickerProviderStateMixin")," (if there's only one ",(0,o.kt)("inlineCode",{parentName:"p"},"AnimationController")," animation)."),(0,o.kt)("p",{parentName:"div"},"e.g."),(0,o.kt)("p",{parentName:"div"},(0,o.kt)("strong",{parentName:"p"},"From:")),(0,o.kt)("pre",{parentName:"div"},(0,o.kt)("code",{parentName:"pre",className:"language-dart"},"class _MyHomePageState extends State<MyHomePage> {\n")),(0,o.kt)("p",{parentName:"div"},(0,o.kt)("strong",{parentName:"p"},"To:")),(0,o.kt)("pre",{parentName:"div"},(0,o.kt)("code",{parentName:"pre",className:"language-dart"},"class _MyHomePageState extends State<MyHomePage> with SingleTickerProviderStateMixin {\n")))),(0,o.kt)("video",{controls:!0,autoplay:!0,style:{"max-width":"100%"},src:t(2547).Z}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-dart"},"import 'package:flutter/material.dart';\n\nvoid main() => runApp(const MyApp());\n\nclass MyApp extends StatelessWidget {\n  const MyApp({Key? key}) : super(key: key);\n\n  @override\n  Widget build(BuildContext context) {\n    return const MaterialApp(\n      home: MyHomePage(),\n    );\n  }\n}\n\nclass MyHomePage extends StatefulWidget {\n  const MyHomePage({Key? key}) : super(key: key);\n\n  @override\n  State<MyHomePage> createState() => _MyHomePageState();\n}\n\nclass _MyHomePageState extends State<MyHomePage>\n    with SingleTickerProviderStateMixin {\n  late AnimationController animationController;\n\n  @override\n  void initState() {\n    super.initState();\n    animationController = AnimationController(\n      vsync: this,\n      lowerBound: 0.0,\n      upperBound: 2.2,\n      duration: const Duration(seconds: 1),\n      reverseDuration: const Duration(seconds: 1),\n    );\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      appBar: AppBar(title: const Text('animations')),\n      body: Column(\n        mainAxisAlignment: MainAxisAlignment.center,\n        children: [\n          Container(\n            alignment: Alignment.center,\n            height: 64.0,\n            padding: const EdgeInsets.all(12.0),\n            child: Row(\n              mainAxisAlignment: MainAxisAlignment.spaceEvenly,\n              children: [\n                ElevatedButton(\n                  onPressed: () {\n                    animationController.forward();\n                  },\n                  child: const Text('Forward'),\n                ),\n                ElevatedButton(\n                  onPressed: () {\n                    animationController.reverse();\n                  },\n                  child: const Text('Reverse'),\n                ),\n                ElevatedButton(\n                  onPressed: () {\n                    animationController.stop();\n                  },\n                  child: const Text('Stop'),\n                ),\n                ElevatedButton(\n                  onPressed: () {\n                    animationController.reset();\n                  },\n                  child: const Text('Reset'),\n                ),\n              ],\n            ),\n          ),\n          Expanded(\n            child: Center(\n              child: RotationTransition(\n                turns: animationController,\n                child: Container(\n                  height: 96.0,\n                  width: 96.0,\n                  color: Colors.red,\n                ),\n              ),\n            ),\n          ),\n          // Just for demo.\n          AnimationControllerStateViewer(\n            animationController: animationController,\n          ),\n        ],\n      ),\n    );\n  }\n}\n\n/// Just to show the available properties in the [AnimationController] class.\n\nclass AnimationControllerStateViewer extends StatefulWidget {\n  final AnimationController animationController;\n  const AnimationControllerStateViewer({\n    Key? key,\n    required this.animationController,\n  }) : super(key: key);\n\n  @override\n  AnimationControllerStateViewerState createState() =>\n      AnimationControllerStateViewerState();\n}\n\nclass AnimationControllerStateViewerState\n    extends State<AnimationControllerStateViewer> {\n  @override\n  void initState() {\n    super.initState();\n    // Redraw this widget to show updated properties.\n    widget.animationController.addListener(() {\n      setState(() {});\n    });\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    return Container(\n      padding: const EdgeInsets.all(12.0),\n      width: double.infinity,\n      height: 156.0,\n      child: Column(\n        crossAxisAlignment: CrossAxisAlignment.start,\n        children: [\n          Text(\n            'animationController.isAnimating: ${widget.animationController.isAnimating}',\n          ),\n          Text(\n            'animationController.isCompleted: ${widget.animationController.isCompleted}',\n          ),\n          Text(\n            'animationController.isDismissed: ${widget.animationController.isDismissed}',\n          ),\n          Text(\n            'animationController.status: ${widget.animationController.status}',\n          ),\n          Text(\n            'animationController.value: ${widget.animationController.value}',\n          ),\n          Text(\n            'animationController.velocity: ${widget.animationController.velocity}',\n          ),\n        ],\n      ),\n    );\n  }\n}\n")),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"If you noticed, there's actually no ",(0,o.kt)("inlineCode",{parentName:"p"},"curve")," argument in ",(0,o.kt)("inlineCode",{parentName:"p"},"AnimationController"),". You need to use ",(0,o.kt)("a",{parentName:"p",href:"https://api.flutter.dev/flutter/animation/CurvedAnimation-class.html"},(0,o.kt)("inlineCode",{parentName:"a"},"CurvedAnimation"))," together."),(0,o.kt)("pre",{parentName:"div"},(0,o.kt)("code",{parentName:"pre",className:"language-dart"},"late AnimationController animationController;\nlate Animation<double> animation;\n\n@override\nvoid initState() {\n  super.initState();\n  animationController = AnimationController(\n    vsync: this,\n    duration: const Duration(seconds: 1),\n    reverseDuration: const Duration(seconds: 1),\n  );\n  animation = Tween<double>(begin: 0.0, end: 2.0).animate(\n    CurvedAnimation(\n      curve: Curves.easeInOut,\n      reverseCurve: Curves.easeInCirc,\n      parent: animationController,\n    ),\n  );\n}\n")),(0,o.kt)("p",{parentName:"div"},"In above example, just use ",(0,o.kt)("inlineCode",{parentName:"p"},"CurvedAnimation")," with ",(0,o.kt)("inlineCode",{parentName:"p"},"Tween<T>.animate")," and then pass ",(0,o.kt)("inlineCode",{parentName:"p"},"animation")," as the ",(0,o.kt)("inlineCode",{parentName:"p"},"turns")," in ",(0,o.kt)("inlineCode",{parentName:"p"},"RotationTransition")," instead of ",(0,o.kt)("inlineCode",{parentName:"p"},"animationController")," itself."))),(0,o.kt)("h3",{id:"animationcontroller--animatedbuilder--animatedwidget"},"AnimationController & AnimatedBuilder / AnimatedWidget"),(0,o.kt)("p",null,"This should be only used when you wish to animate a Flutter ",(0,o.kt)("inlineCode",{parentName:"p"},"Widget")," property which is not already present as ",(0,o.kt)("inlineCode",{parentName:"p"},"XYZTransition")," in the Flutter framework."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Here, I'll be animating ",(0,o.kt)("inlineCode",{parentName:"strong"},"fontSize")," of a ",(0,o.kt)("inlineCode",{parentName:"strong"},"Text"),".")),(0,o.kt)("p",null,"Though, it would've been better to use ",(0,o.kt)("inlineCode",{parentName:"p"},"ScaleTransition")," instead!"),(0,o.kt)("video",{controls:!0,autoplay:!0,style:{"max-width":"100%"},src:t(7588).Z}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-dart"},"import 'package:flutter/material.dart';\n\nvoid main() => runApp(const MyApp());\n\nclass MyApp extends StatelessWidget {\n  const MyApp({Key? key}) : super(key: key);\n\n  @override\n  Widget build(BuildContext context) {\n    return const MaterialApp(\n      home: MyHomePage(),\n    );\n  }\n}\n\nclass MyHomePage extends StatefulWidget {\n  const MyHomePage({Key? key}) : super(key: key);\n\n  @override\n  State<MyHomePage> createState() => _MyHomePageState();\n}\n\nclass _MyHomePageState extends State<MyHomePage>\n    with SingleTickerProviderStateMixin {\n  late AnimationController animationController;\n\n  @override\n  void initState() {\n    super.initState();\n    animationController = AnimationController(\n      vsync: this,\n      lowerBound: 16.0,\n      upperBound: 24.0,\n      duration: const Duration(seconds: 1),\n      reverseDuration: const Duration(seconds: 1),\n    );\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      appBar: AppBar(title: const Text('animations')),\n      body: Column(\n        mainAxisAlignment: MainAxisAlignment.center,\n        children: [\n          Container(\n            alignment: Alignment.center,\n            height: 64.0,\n            padding: const EdgeInsets.all(12.0),\n            child: Row(\n              mainAxisAlignment: MainAxisAlignment.spaceEvenly,\n              children: [\n                ElevatedButton(\n                  onPressed: () {\n                    animationController.forward();\n                  },\n                  child: const Text('Forward'),\n                ),\n                ElevatedButton(\n                  onPressed: () {\n                    animationController.reverse();\n                  },\n                  child: const Text('Reverse'),\n                ),\n                ElevatedButton(\n                  onPressed: () {\n                    animationController.stop();\n                  },\n                  child: const Text('Stop'),\n                ),\n                ElevatedButton(\n                  onPressed: () {\n                    animationController.reset();\n                  },\n                  child: const Text('Reset'),\n                ),\n              ],\n            ),\n          ),\n          Expanded(\n            child: Center(\n              child: AnimatedBuilder(\n                animation: animationController,\n                builder: (context, child) => Text(\n                  'Well, this is a text.',\n                  style: TextStyle(\n                    fontSize: animationController.value,\n                    fontWeight: FontWeight.w700,\n                  ),\n                ),\n              ),\n            ),\n          ),\n          // Just for demo.\n        ],\n      ),\n    );\n  }\n}\n")),(0,o.kt)("h3",{id:"end-notes"},"End Notes"),(0,o.kt)("p",null,"Even though, the examples shown above are quite simple, they show most of the things which are available to animate a Flutter ",(0,o.kt)("inlineCode",{parentName:"p"},"Widget")," in your own way."),(0,o.kt)("p",null,"A lot of animations can be combined together to create a complex animation. A listener can be added to ",(0,o.kt)("inlineCode",{parentName:"p"},"AnimationController")," to listen to various events & possibly alter the curve, duration or any other property of animation in the middle of animation itself etc. Endless possibilities are there!"),(0,o.kt)("p",null,"Few of the properties were shown in the ",(0,o.kt)("a",{parentName:"p",href:"#animationcontroller--xyztransition-widgets"},"AnimationController & XYZTransition Widgets")," video."),(0,o.kt)("p",null,"So, these are my tips on adding animations in a Flutter app."))}u.isMDXComponent=!0},9259:function(e,n,t){n.Z=t.p+"assets/medias/animations-1-4d61bf4e41ed2e3ba60e3ef1dbc94d8c.mp4"},3336:function(e,n,t){n.Z=t.p+"assets/medias/animations-2-eb8184b10d337f471164ae5dfcf5cfce.mp4"},2547:function(e,n,t){n.Z=t.p+"assets/medias/animations-3-98b533bbd06c915ac7ff7e5bb935ab97.mp4"},7588:function(e,n,t){n.Z=t.p+"assets/medias/animations-4-ed8565fe8def28f78cf7f6854370cd12.mp4"}}]);